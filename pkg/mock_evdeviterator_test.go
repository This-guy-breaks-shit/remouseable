// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kevinconway/remouseable/pkg (interfaces: EvdevIterator)

// Package remouseable is a generated GoMock package.
package remouseable

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEvdevIterator is a mock of EvdevIterator interface
type MockEvdevIterator struct {
	ctrl     *gomock.Controller
	recorder *MockEvdevIteratorMockRecorder
}

// MockEvdevIteratorMockRecorder is the mock recorder for MockEvdevIterator
type MockEvdevIteratorMockRecorder struct {
	mock *MockEvdevIterator
}

// NewMockEvdevIterator creates a new mock instance
func NewMockEvdevIterator(ctrl *gomock.Controller) *MockEvdevIterator {
	mock := &MockEvdevIterator{ctrl: ctrl}
	mock.recorder = &MockEvdevIteratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEvdevIterator) EXPECT() *MockEvdevIteratorMockRecorder {
	return m.recorder
}

// Close mocks base method
func (m *MockEvdevIterator) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockEvdevIteratorMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockEvdevIterator)(nil).Close))
}

// Current mocks base method
func (m *MockEvdevIterator) Current() EvdevEvent {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Current")
	ret0, _ := ret[0].(EvdevEvent)
	return ret0
}

// Current indicates an expected call of Current
func (mr *MockEvdevIteratorMockRecorder) Current() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Current", reflect.TypeOf((*MockEvdevIterator)(nil).Current))
}

// Next mocks base method
func (m *MockEvdevIterator) Next() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Next indicates an expected call of Next
func (mr *MockEvdevIteratorMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockEvdevIterator)(nil).Next))
}
